// Generated by CoffeeScript 1.8.0
(function() {
  define(["color"], function(color) {
    var blue, empty, green, player, red;
    player = function() {
      var initialized, mainBlock, speed;
      speed = .1;
      initialized = false;
      mainBlock = {
        shape: "Rectangle",
        color: color.black,
        x: 0,
        y: 0,
        width: 10,
        height: 80
      };
      return {
        update: function(state) {
          var permissableMove;
          if (!initialized) {
            mainBlock.x = (state.width - mainBlock.width) / 2;
            mainBlock.y = state.height - 20 - mainBlock.height;
            initialized = true;
          }
          permissableMove = speed * state.frameElapsed;
          if (state.keys.isDown("Down Arrow")) {
            mainBlock.y += permissableMove;
          }
          if (state.keys.isDown("Up Arrow")) {
            mainBlock.y -= permissableMove;
          }
          if (state.keys.isDown("Right Arrow")) {
            mainBlock.x += permissableMove;
          }
          if (state.keys.isDown("Left Arrow")) {
            return mainBlock.x -= permissableMove;
          }
        },
        getRenderTargets: function() {
          return mainBlock;
        }
      };
    };
    blue = function() {
      var altBlock, mainBlock;
      mainBlock = {
        shape: "Rectangle",
        color: color.blueTint,
        x: 0,
        y: 30,
        width: 55,
        height: 50
      };
      altBlock = {
        shape: "Rectangle",
        color: color.blueTint,
        x: -100,
        y: 30,
        width: 55,
        height: 50
      };
      return {
        update: function(state) {
          mainBlock.x = state.width * (state.startElapsed % Math.pow(10, 4)) / Math.pow(10, 4);
          return altBlock.x = mainBlock.x + mainBlock.width > state.width ? mainBlock.x - state.width : -100;
        },
        getRenderTargets: function() {
          if (altBlock.x === -100) {
            return [mainBlock];
          } else {
            return [mainBlock, altBlock];
          }
        }
      };
    };
    green = function() {
      var block;
      block = {
        shape: "Rectangle",
        color: color.green,
        x: 0,
        y: 0,
        width: 20,
        height: 20
      };
      return {
        update: function(state) {
          var baseHeight, cycleLength, extraHeight, positionInCycle, tween;
          baseHeight = 20;
          extraHeight = 20;
          cycleLength = 200;
          positionInCycle = state.startElapsed % cycleLength / cycleLength;
          tween = ((Math.cos(positionInCycle * Math.PI * 2)) + 1) / 2;
          block.x = (state.width - block.width) / 2;
          block.y = (state.height - block.height) / 2;
          return block.height = block.width = baseHeight + tween * extraHeight;
        },
        getRenderTargets: function() {
          return [block];
        }
      };
    };
    red = function(_arg) {
      var x, y;
      x = _arg.x, y = _arg.y;
      return {
        update: function() {},
        getRenderTargets: function() {
          return {
            shape: "Rectangle",
            color: color.red,
            x: x,
            y: y,
            width: 55,
            height: 50
          };
        }
      };
    };
    empty = function() {};
    return {
      red: red,
      blue: blue,
      green: green,
      player: player,
      empty: empty
    };
  });

}).call(this);

//# sourceMappingURL=actors.map
